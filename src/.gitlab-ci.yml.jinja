# /!\ pin refs when project enters maintenance phase.
include:
  - project: acsone/gitlab-ci-templates
    file: pre-commit.yml
    ref: master
  - project: acsone/gitlab-ci-templates
    file: push-pot.yml
    ref: master
  - project: acsone/gitlab-ci-templates
    file: build-publish-image-buildkit-localpods.yml
    ref: master
  - project: acsone/gitlab-ci-templates
    file: python-coverage-report.yml
    ref: master

variables:
  TRIGRAM: {{ project_trigram }}

pre-commit:
  extends: .pre-commit
  variables:
    ACIT_PYTHON_IMAGE: "python:{{ python_version }}"
    ACIT_PRE_COMMIT_VERSION: "4.0.1"

.test_common:
  variables:
    FF_KUBERNETES_HONOR_ENTRYPOINT: 1 # we want the odoo-bedrock image entrypoint to run
    NOGOSU: 1 # In order to run test as root. So pip install -e . can write to the venv
    DB_HOST: $PGHOST
    DB_USER: $PGUSER
    DB_PASSWORD: $PGPASSWORD
    DB_NAME: "${CI_PROJECT_NAME}-${CI_JOB_ID}"
  image: ${CI_REGISTRY_IMAGE}/dependencies:${CI_COMMIT_SHA}
  interruptible: true
  needs:
    - job: build-dependencies-image

license_check:
  extends: .test_common
  tags:
    - generic
  script:
    - manifestoo -d odoo/addons check-licenses

dev_status_check:
  extends: .test_common
  tags:
    - generic
  script:
    - manifestoo -d odoo/addons check-dev-status --default-dev-status=Beta

test:
  extends: .test_common
  {%- if kwkhtmltopdf_test_service %}
  services:
    - name: ghcr.io/acsone/kwkhtmltopdf:0.12.5-latest
      alias: kwkhtmltopdf
  variables:
    KWKHTMLTOPDF_SERVER_URL: http://kwkhtmltopdf:8080
  {%- endif %}
  tags:
    - postgres
  script:
    - pip install -e .
    - ADDONS_INIT=$(manifestoo -d odoo/addons list-depends --separator=,)
    - echo Installing dependent addons ${ADDONS_INIT}
    - unbuffer click-odoo-initdb -c odoo-ci.cfg --new-database ${DB_NAME} --cache-prefix $TRIGRAM -m ${ADDONS_INIT} | checklog-odoo
    - ADDONS_TEST=$(manifestoo -d odoo/addons list --separator=,)
    - echo Installing project addons ${ADDONS_TEST}
    - unbuffer coverage run  /odoo/bin/odoo -c odoo-ci.cfg -d ${DB_NAME} --stop-after-init -i ${ADDONS_TEST} | checklog-odoo
    - echo Testing project addons ${ADDONS_TEST}
    - unbuffer coverage run /odoo/bin/odoo -c odoo-ci.cfg -d ${DB_NAME} --stop-after-init --test-tags /${ADDONS_TEST//,/,\/} --test-enable | checklog-odoo
    - if [ "${CI_COMMIT_REF_NAME}" = "master" ] ; then click-odoo-makepot -c odoo-ci.cfg -d ${DB_NAME} {% if not use_weblate %}--msgmerge {% endif %}--addons-dir=odoo/addons ; fi
  after_script:
    - dropdb --if-exists ${DB_NAME}
  artifacts:
    expire_in: 1 week
    paths:
      - odoo/addons/**/*.po*
      - .coverage.*

coverage:
  extends: .python-coverage-report
  needs:
    - job: test
      artifacts: true

push-pot:
  extends: .push-pot
  variables:
    ACIT_SSH_KEY: $SSH_DEPLOY_KEY
  needs:
    - job: test
      artifacts: true

# build container images

.build-publish-image:
  extends: .build-publish-image-buildkit-localpods

build-dependencies-image:
  extends: .build-publish-image
  variables:
    ACIT_IMAGE_BUILD_TARGET: dependencies
    ACIT_IMAGE_FLAVOR: /dependencies
    ACIT_IMAGE_TAG: $CI_COMMIT_SHA

{%- if review_environments %}
build-review-image:
  extends: .build-publish-image
  variables:
    ACIT_IMAGE_FLAVOR: /review
  only:
    - branches
  except:
    - master
  when: manual
{%- endif %}

build-test-image:
  extends: .build-publish-image
  variables:
    ACIT_IMAGE_FLAVOR: /test
  only:
    - /^\d+\.\d+\.\d+$/

build-uat-image:
  extends: .build-publish-image
  variables:
    ACIT_IMAGE_FLAVOR: /uat
  only:
    - /^\d+\.\d+\.\d+$/
  when: manual

build-prod-image:
  extends: .build-publish-image
  variables:
    ACIT_IMAGE_FLAVOR: /prod
  only:
    - /^\d+\.\d+\.\d+$/
  when: manual

{%- if deploy_branch %}
# deployments

.deploy-trigger:
  tags:
    - generic
  image: ghcr.io/acsone/deploy-tools
  script:
    - echo "triggering deploy of ${CI_REGISTRY_IMAGE}${IMAGE_FLAVOR}:${CI_COMMIT_REF_NAME} to ${CI_ENVIRONMENT_NAME}"
    - |
      curl --request POST \
        --form "token=${CI_JOB_TOKEN}" \
        --form "ref=${DEPLOY_BRANCH}" \
        --form "variables[DEPLOY_ENV]=${CI_ENVIRONMENT_NAME}" \
        --form "variables[DEPLOY_IMAGE]=${CI_REGISTRY_IMAGE}${IMAGE_FLAVOR}" \
        --form "variables[DEPLOY_COMMIT_REF_NAME]=${CI_COMMIT_REF_NAME}" \
        --form "variables[DEPLOY_COMMIT_SHA]=${CI_COMMIT_SHA}" \
        "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/trigger/pipeline"

{%- if review_environments %}
deploy-review-trigger:
  extends: .deploy-trigger
  variables:
    DEPLOY_BRANCH: deploy
    IMAGE_FLAVOR: /review
  needs:
    - job: build-review-image
  only:
    - branches
  except:
    - master
{%- endif %}

deploy-test-trigger:
  extends: .deploy-trigger
  variables:
    DEPLOY_BRANCH: deploy
    IMAGE_FLAVOR: /test
  environment:
    name: test
  needs:
    - job: build-test-image
  only:
    - /^\d+\.\d+\.\d+$/

deploy-uat-trigger:
  extends: .deploy-trigger
  variables:
    DEPLOY_BRANCH: deploy
    IMAGE_FLAVOR: /uat
  environment:
    name: uat
  needs:
    - job: build-uat-image
  only:
    - /^\d+\.\d+\.\d+$/

deploy-prod-trigger:
  extends: .deploy-trigger
  variables:
    DEPLOY_BRANCH: deploy
    IMAGE_FLAVOR: /prod
  environment:
    name: prod
  needs:
    - job: build-prod-image
  only:
    - /^\d+\.\d+\.\d+$/
{%- endif %}
