# syntax=docker/dockerfile:1.4

#######################################################################################
# base stage, with the non-python runtime dependencies
#
ARG DISTRO={{ distro }}
FROM ghcr.io/acsone/odoo-bedrock:{{ odoo_series }}-py{{ python_version|replace('.', '') }}-${DISTRO}-latest as base
ARG DISTRO
# Install apt runtime dependencies.
# - postgresql-client for comfort in the shell container and for db dump to work
# - expect to have unbuffer in CI
# - gettext for click-odoo-makepot in CI
RUN set -e \
  && apt update \
  && apt -y install --no-install-recommends \
       postgresql-client \
       expect \
       gettext \
       libxmlsec1-openssl \
       libcairo2 \
  && apt -y clean \
  && rm -rf /var/lib/apt/lists/*

#######################################################################################
# builds-deps stage, where we download requirements-build.txt,
# and install tools necessary to build source distributions.
#

FROM base as build-deps

# Install git.
RUN set -e \
  && apt update \
  && apt -y install --no-install-recommends \
       git \
       openssh-client \
       python{{ python_version }}-dev \
       build-essential \
       libpq-dev \
       pkg-config libxml2-dev libxmlsec1-dev \
       libcairo2-dev \
  && apt -y clean \
  && rm -rf /var/lib/apt/lists/*

# Configure ssh.
RUN mkdir -p $HOME/.ssh \
 && ssh-keyscan github.com >> $HOME/.ssh/known_hosts \
 && ssh-keyscan gitlab.acsone.eu >> $HOME/.ssh/known_hosts

# Configure pip:
# - use pep517 builds always (no setup.py bdist_wheel)
# - constraint build depdendencies for better reproducibility
ENV PIP_USE_PEP517=1 PIP_CONSTRAINTS=/build-deps/requirements-build.txt

# Download build dependencies to /build-deps.
# --only-binary=:all: is to avoid trying building build dependencies from source
# --no-deps is to make sure we have pinned them all
COPY requirements-build.txt /build-deps/
RUN pip wheel --only-binary=:all: --no-deps --wheel-dir=/build-deps -r /build-deps/requirements-build.txt

#######################################################################################
# build-* stages, can run in parallel and be cached as independent layers.
# --no-deps is to make sure we have pinned them all
#

FROM python:3.11-slim as split-requirements
RUN pip install "pip-split-requirements>=0.7"
WORKDIR /reqs/
COPY requirements*.txt /reqs/
RUN pip-split-requirements \
    --group-spec="odoo:^(odoo|odoo-addons-enterprise)\s*@" \
    --group-spec="odoo-addons:odoo-addon" \
    --prefix="requirements-group" \
    requirements.txt requirements-test.txt

FROM build-deps as build-odoo
COPY --from=split-requirements /reqs/requirements-group-odoo.txt /build/reqs.txt
RUN --mount=type=ssh \
    --mount=type=cache,target=/root/.cache/pip,id=pip-${DISTRO} \
    pip wheel --no-deps --wheel-dir=/build -r /build/reqs.txt

FROM build-deps as build-odoo-addons
COPY --from=split-requirements /reqs/requirements-group-odoo-addons.txt /build/reqs.txt
RUN --mount=type=ssh \
    --mount=type=cache,target=/root/.cache/pip,id=pip-${DISTRO} \
    pip wheel --no-deps --wheel-dir=/build -r /build/reqs.txt

FROM build-deps as build-other
COPY --from=split-requirements /reqs/requirements-group-other.txt /build/reqs.txt
RUN --mount=type=ssh \
    --mount=type=cache,target=/root/.cache/pip,id=pip-${DISTRO} \
    pip wheel --no-deps --wheel-dir=/build -r /build/reqs.txt

#######################################################################################
# dependencies stage, installs wheels from build stages on top of other runtime deps.
# This stage basically installs everything we need at runtime, except the app itself.
#

FROM base as dependencies

# Install python dependencies we built in the build stage.
# Use --no-deps and --no-index to be sure to not download anything else.

RUN --mount=type=bind,target=/build,source=/build,from=build-odoo \
  pip install --no-deps --no-index /build/*.whl

RUN --mount=type=bind,target=/build,source=/build,from=build-other \
  pip install --no-deps --no-index /build/*.whl

RUN --mount=type=bind,target=/build,source=/build,from=build-odoo-addons \
  pip install --no-deps --no-index /build/*.whl

# Additional entry point scripts.
COPY ./container/entrypoint-dbbase /odoo/start-entrypoint.d/

#######################################################################################
# runtime stage, installs the app in editable mode, on top of dependencies.
#

FROM dependencies as runtime

# Install the app in editable mode.
# Here we don't use --no-deps but we do use --no-index to be sure that all dependencies
# have been installed before (i.e. they have been pinned in requirements.txt).
COPY . /app
RUN python -m compileall /app/odoo /app/odoo_{{ project_name|lower|replace(' ', '_') }}
RUN --mount=type=bind,target=/build-deps,source=/build-deps,from=build-deps \
  --mount=type=cache,target=/root/.cache/pip,id=pip-${DISTRO} \
  pip install --no-index --find-links /build-deps --editable /app
